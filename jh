'use client'

import { useState, useEffect } from 'react'
import { Button } from '@/components/ui/button'
import { X } from 'lucide-react'

interface CartItem {
  id: number
  name: string
  price: number
  quantity: number
}

const ShoppingCart = () => {
  const [isOpen, setIsOpen] = useState(false)
  const [cart, setCart] = useState<CartItem[]>([])

  useEffect(() => {
    const toggleCart = () => setIsOpen(prev => !prev)
    const updateCart = (e: CustomEvent) => setCart(e.detail.cart)

    document.addEventListener('toggleCart', toggleCart)
    document.addEventListener('updateCart', updateCart as EventListener)

    return () => {
      document.removeEventListener('toggleCart', toggleCart)
      document.removeEventListener('updateCart', updateCart as EventListener)
    }
  }, [])

  const removeFromCart = (id: number) => {
    setCart(prevCart => prevCart.filter(item => item.id !== id))
  }

  const totalPrice = cart.reduce((sum, item) => sum + item.price * item.quantity, 0)

  if (!isOpen) return null

  return (
    <div className="fixed inset-y-0 right-0 w-64 bg-white shadow-lg p-4 overflow-y-auto">
      <div className="flex justify-between items-center mb-4">
        <h3 className="text-lg font-semibold">Your Cart</h3>
        <Button variant="ghost" size="icon" onClick={() => setIsOpen(false)}>
          <X className="h-5 w-5" />
        </Button>
      </div>
      {cart.length === 0 ? (
        <p>Your cart is empty</p>
      ) : (
        <>
          {cart.map(item => (
            <div key={item.id} className="flex justify-between items-center mb-2">
              <div>
                <p className="font-semibold">{item.name}</p>
                <p className="text-sm text-gray-500">
                  ${item.price.toFixed(2)} x {item.quantity}
                </p>
              </div>
              <Button variant="ghost" size="sm" onClick={() => removeFromCart(item.id)}>
                Remove
              </Button>
            </div>
          ))}
          <div className="mt-4 pt-4 border-t">
            <p className="font-semibold">Total: ${totalPrice.toFixed(2)}</p>
            <Button className="w-full mt-4">Checkout</Button>
          </div>
        </>
      )}
    </div>
  )
}

export default ShoppingCart

